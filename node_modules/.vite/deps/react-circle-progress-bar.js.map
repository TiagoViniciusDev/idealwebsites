{
  "version": 3,
  "sources": ["../../react-circle-progress-bar/dist/progress.js"],
  "sourcesContent": ["import React from 'react';\nimport styles from './progress.module.css';\n\nfunction useAnimateValue(value, duration) {\n  const [current, setCurrent] = React.useState(value);\n  React.useLayoutEffect(() => {\n    const stepDuration = 1 / 50;\n    const totalSteps = duration / stepDuration;\n    const stepSize = (value - current) / totalSteps;\n    let currentStep = 0;\n    const interval = setInterval(() => setCurrent(current => {\n      currentStep++;\n\n      if (currentStep >= totalSteps) {\n        clearInterval(interval);\n        return value;\n      }\n\n      return current + stepSize;\n    }), stepDuration * 1000);\n    return () => clearInterval(interval);\n  }, [value, duration]);\n  return current;\n}\n\nconst AnimatePercentage = /*#__PURE__*/React.memo(({\n  value,\n  duration\n}) => {\n  const v = useAnimateValue(value, duration);\n  return Math.round(v * 100) / 100;\n});\n\nfunction _Progress({\n  progress = 0,\n  strokeWidth = 4,\n  ballStrokeWidth = 16,\n  reduction = 0.25,\n  transitionDuration = 0.5,\n  transitionTimingFunction = 'ease',\n  background = '#dde2e9',\n  hideBall = false,\n  hideValue = false,\n  gradient = [{\n    stop: 0.0,\n    color: '#00bc9b'\n  }, {\n    stop: 1,\n    color: '#5eaefd'\n  }],\n  subtitle = \"\",\n  style,\n  className\n}) {\n  progress = Math.round(progress * 100) / 100;\n  const width = 200;\n  const center = width / 2;\n  const height = 200 || center + center * Math.cos(reduction * Math.PI);\n  const [unique] = React.useState(() => Math.random().toString());\n  const rotate = 90 + 180 * reduction;\n  const r = center - strokeWidth / 2 - ballStrokeWidth / 2;\n  const circumference = Math.PI * r * 2;\n  const offset = circumference * (100 - progress * (1 - reduction)) / 100;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${className} ${styles.progress}`,\n    style: style\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: `0 0 ${width} ${height}`,\n    className: styles.svg\n  }, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"gradient\" + unique,\n    x1: \"0%\",\n    y1: \"0%\",\n    x2: \"0%\",\n    y2: \"100%\"\n  }, gradient.map(({\n    stop,\n    color\n  }) => /*#__PURE__*/React.createElement(\"stop\", {\n    key: stop,\n    offset: stop * 100 + \"%\",\n    stopColor: color\n  })))), !hideValue && /*#__PURE__*/React.createElement(\"text\", {\n    x: center,\n    y: center,\n    textAnchor: \"middle\",\n    fontSize: \"30\",\n    fill: \"#3c3c3c\"\n  }, progress, \"%\"), /*#__PURE__*/React.createElement(\"text\", {\n    x: center,\n    y: center + 30 * 3 / 4,\n    textAnchor: \"middle\",\n    fill: \"#9c9c9c\"\n  }, subtitle), /*#__PURE__*/React.createElement(\"circle\", {\n    transform: `rotate(${rotate} ${center} ${center})`,\n    id: \"path\",\n    cx: center,\n    cy: center,\n    r: r,\n    strokeWidth: strokeWidth,\n    strokeDasharray: circumference,\n    strokeDashoffset: circumference * reduction,\n    fill: \"none\",\n    stroke: background,\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    style: {\n      transition: `stroke-dashoffset ${transitionDuration}s ${transitionTimingFunction}`\n    },\n    transform: `rotate(${rotate} ${center} ${center})`,\n    id: \"path\",\n    cx: center,\n    cy: center,\n    r: r,\n    strokeWidth: strokeWidth,\n    strokeDasharray: `${circumference}`,\n    strokeDashoffset: offset,\n    fill: \"none\",\n    stroke: `url(#gradient${unique})`,\n    strokeLinecap: \"round\"\n  }), !hideBall && /*#__PURE__*/React.createElement(\"circle\", {\n    style: {\n      transition: `stroke-dashoffset ${transitionDuration}s ${transitionTimingFunction}`\n    },\n    transform: `rotate(${rotate} ${center} ${center})`,\n    id: \"path\",\n    cx: center,\n    cy: center,\n    r: r,\n    strokeWidth: ballStrokeWidth,\n    strokeDasharray: `1 ${circumference}`,\n    strokeDashoffset: offset,\n    fill: \"none\",\n    stroke: `url(#gradient${unique})`,\n    strokeLinecap: \"round\"\n  })));\n}\n\nexport const Progress = /*#__PURE__*/React.memo(_Progress);\nProgress.displayName = \"Progress\";\nexport default Progress;"],
  "mappings": "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",
  "names": ["React", "current"]
}
